name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio pytest-mock
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Stop the build if there are any flake8 warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
    
    - name: Run unit tests
      run: |
        pytest tests/unit_tests.py -v --cov=web_scraping --cov-report=xml
    
    - name: Run integration tests
      run: |
        pytest tests/integration_tests.py -v --cov=web_scraping --cov-report=xml
    
    - name: Run performance tests
      run: |
        pytest tests/performance_tests.py -v --cov=web_scraping --cov-report=xml
    
    - name: Run security tests
      run: |
        pytest tests/security_tests.py -v --cov=web_scraping --cov-report=xml
    
    - name: Run compliance tests
      run: |
        pytest tests/compliance_tests.py -v --cov=web_scraping --cov-report=xml
    
    - name: Generate test documentation
      run: |
        python tests/test_documentation.py
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true